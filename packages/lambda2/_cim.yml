version: 0.1
stack:
  name: lambda2 # Note: Update this with your stack name
  template:
    file: cloudformation.yml
    bucket: samanage-sandbox-cim-artifacts # Note: Update this with your bucket name.  Stacks are uploaded here prior to deployment.'

#
# Reference parent stacks fo included shared information like stack name.
#
#  parents:
#    vpc: '../vpc'

#
# Define stack input parameters.
#
#  parameters:
#    VpcStackName: '${stack.parents.vpc.stack.name}'

#
# Define stack capabilities required.
#
  capabilities:
    - 'CAPABILITY_IAM'

#
# Define global tags.
#
#  tags:
#    app: 'cim-stack'

lambda:
  functions:
    -
      function: ${stack.outputs.LambdaFunction}
      aliases:
        PROD: ${stack.outputs.LambdaFunctionAlias}
      zip_file: index.zip
  deploy:
    phases:
      pre_deploy:
        commands:
          # Install all npm packages including dev packages.
          # npm install
          # - yarn

          # Run the tests
          # npm test
          # - yarn test

          # Remove all the npm packages.
          - rm -rf node_modules.dev
          - mv node_modules node_modules.dev

          # Only install the non-dev npm packages.  We don't want to bloat our Lambda with dev packages.
          # npm install --production
          - yarn install --production=true

          # Zip the Lambda for upload to S3.
          - zip -r index.zip index.js node_modules
      post_deploy:
        commands:
          # Remove the zip file.
          - mv -f index.zip old.index.zip

          # Reinstall the dev npm packages.
          - mv node_modules.dev node_modules